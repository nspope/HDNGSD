// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// sfs1d
arma::mat sfs1d(const arma::sp_mat saf, const arma::uvec block, const unsigned num_boot, const bool fold);
RcppExport SEXP _haplodiplo_sfs1d(SEXP safSEXP, SEXP blockSEXP, SEXP num_bootSEXP, SEXP foldSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::sp_mat >::type saf(safSEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type block(blockSEXP);
    Rcpp::traits::input_parameter< const unsigned >::type num_boot(num_bootSEXP);
    Rcpp::traits::input_parameter< const bool >::type fold(foldSEXP);
    rcpp_result_gen = Rcpp::wrap(sfs1d(saf, block, num_boot, fold));
    return rcpp_result_gen;
END_RCPP
}

// sfs2d
arma::cube sfs2d(const arma::sp_mat saf0, const arma::sp_mat saf1, const arma::uvec block, const unsigned num_boot, const bool fold);
RcppExport SEXP _haplodiplo_sfs2d(SEXP saf0SEXP, SEXP saf1SEXP, SEXP blockSEXP, SEXP num_bootSEXP, SEXP foldSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::sp_mat >::type saf0(saf0SEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat >::type saf1(saf1SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type block(blockSEXP);
    Rcpp::traits::input_parameter< const unsigned >::type num_boot(num_bootSEXP);
    Rcpp::traits::input_parameter< const bool >::type fold(foldSEXP);
    rcpp_result_gen = Rcpp::wrap(sfs2d(saf0, saf1, block, num_boot, fold));
    return rcpp_result_gen;
END_RCPP
}

// sfs3d
Rcpp::NumericVector sfs3d(const arma::sp_mat saf0, const arma::sp_mat saf1, const arma::sp_mat saf2, const arma::uvec block, const unsigned num_boot, const bool fold);
RcppExport SEXP _haplodiplo_sfs3d(SEXP saf0SEXP, SEXP saf1SEXP, SEXP saf2SEXP, SEXP blockSEXP, SEXP num_bootSEXP, SEXP foldSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::sp_mat >::type saf0(saf0SEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat >::type saf1(saf1SEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat >::type saf2(saf2SEXP);
    Rcpp::traits::input_parameter< const arma::uvec >::type block(blockSEXP);
    Rcpp::traits::input_parameter< const unsigned >::type num_boot(num_bootSEXP);
    Rcpp::traits::input_parameter< const bool >::type fold(foldSEXP);
    rcpp_result_gen = Rcpp::wrap(sfs3d(saf0, saf1, saf2, block, num_boot, fold));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_Haplodiplo();

static const R_CallMethodDef CallEntries[] = {
    {"_haplodiplo_sfs1d", (DL_FUNC) &_haplodiplo_sfs1d, 4},
    {"_haplodiplo_sfs2d", (DL_FUNC) &_haplodiplo_sfs2d, 5},
    {"_haplodiplo_sfs3d", (DL_FUNC) &_haplodiplo_sfs3d, 6},
    {"_rcpp_module_boot_Haplodiplo", (DL_FUNC) &_rcpp_module_boot_Haplodiplo, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_haplodiplo(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
